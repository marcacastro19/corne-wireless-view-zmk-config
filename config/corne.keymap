/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <175>;
    global-quick-tap = <75>;
    flavor = "balanced";
    tapping-term-ms = <280>;
};

/ {
    combos {
        compatible = "zmk,combos";

        f1 {
            bindings = <&kp F1>;
            key-positions = <1 13>;
            layers = <0>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <2 14>;
            layers = <0>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <3 15>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <4 16>;
            layers = <0>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <5 17>;
            layers = <0>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <6 18>;
            layers = <0>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <7 19>;
            layers = <0>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <8 20>;
            layers = <0>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <9 21>;
            layers = <0>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <10 22>;
            layers = <0>;
        };

        prtscrn {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <9 10>;
            layers = <0>;
        };

        homefromgame {
            bindings = <&to 0>;
            key-positions = <39 18>;
            layers = <4>;
        };

        num {
            bindings = <&to 3>;
            key-positions = <6 7>;
        };
    };

    macros {
        excel_pivot: excel_pivot {
            compatible = "zmk,behavior-macro";
            label = "EXCEL_PIVOT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp N &kp V>,
                <&macro_tap>,
                <&kp T>,
                <&macro_release>,
                <&kp LEFT_ALT &kp N &kp V>;
        };
    };

    behaviors {
        lshft_bksp_del: lshft_bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "LSHFT_BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <130>;
            hold-trigger-on-release;
        };

        holdshft_ctrl: holdshft_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDSHFT_CTRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <130>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <2 4 5 13 14 15 16 25 26 27 28 29 24 6 7 8 10 21 37 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &holdshft_ctrl LEFT_CONTROL E  &kp R    &kp T                      &kp Y                    &kp U          &holdshft_ctrl LEFT_CONTROL I  &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D                          &kp F    &kp G                      &kp H                    &kp J          &kp K                          &kp L    &kp SEMI  &kp SQT
&sk LSHFT  &kp Z  &kp X  &kp C                          &kp V    &kp B                      &kp N                    &kp M          &kp COMMA                      &kp DOT  &kp FSLH  &sk RIGHT_SHIFT
                         &kp ESCAPE                     &kp TAB  &hold_tap_layer 1 ENTER    &hold_tap_layer 2 SPACE  &kp BACKSPACE  &kp DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans       &kp N1        &kp NUMBER_2  &kp N3            &kp N4    &kp N5           &kp NUMBER_6  &kp N7          &kp N8    &kp NUMBER_9  &kp N0                &kp MINUS
&kp LC(TAB)  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp HOME  &kp PAGE_UP      &kp UP_ARROW  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT     &kp NON_US_BACKSLASH  &kp PLUS
&trans       &trans        &trans        &trans            &kp END   &kp PAGE_DOWN    &trans        &trans          &trans    &trans        &trans                &kp EQUAL
                                         &trans            &trans    &trans           &trans        &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&trans     &trans           &trans        &trans        &trans        &trans         &trans        &trans         &trans        &trans                &kp PIPE               &kp PLUS
&trans     &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans         &excel_pivot  &trans         &trans        &trans                &trans                 &kp EQUAL
                                          &kp TILDE     &trans        &trans         &trans        &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans          &kp UP_ARROW  &trans     &to 0        &trans     &kp N7         &kp N8      &kp N9  &kp N0        &kp MINUS
&trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans       &trans     &kp N4         &kp N5      &kp N6  &kp ASTERISK  &kp PLUS
&trans  &trans  &trans          &trans        &trans     &trans       &trans     &kp N1         &kp N2      &kp N3  &kp SLASH     &kp EQUAL
                                &kp ESCAPE    &kp TAB    &kp ENTER    &kp SPACE  &kp BACKSPACE  &kp DELETE
            >;
        };

        game {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T      &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G      &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B      &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &none  &none  &kp RET    &kp SPACE  &kp BSPC  &kp DEL
            >;
        };
    };
};
